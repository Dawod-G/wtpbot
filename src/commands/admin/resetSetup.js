/**
 * @author Lothaire Guée
 * @description
 *      Contains the command 'setup'.
 *      Allow admin to setup the JSON configuration file.
 */

/*      IMPORTS      */
const { SlashCommandBuilder } = require( "@discordjs/builders" );
const { CommandInteraction } = require( "discord.js" );
 
 /*      AUTHORISATION      */
const { Setup } = require('../../files/modules.js');
 
 /* ----------------------------------------------- */
 /* COMMAND BUILD                                   */
 /* ----------------------------------------------- */
 const slashCommand = new SlashCommandBuilder()
    .setName( "reset_setup" )
    .setDescription( "Supprimer les données de configuration du bot pour ce serveur." )
    .setDefaultPermission( true )
  
 
/* ----------------------------------------------- */
/* PERMISSIONS                                     */
/* ----------------------------------------------- */

const permissions = [
    {
        id: 'MOD_ID',
        type: 'ROLE',
        permission: true,
    },
];

 /* ----------------------------------------------- */
 /* FUNCTIONS                                       */
 /* ----------------------------------------------- */
 /**
  * Function called when the command 'ping'
  * @param {CommandInteraction} interaction The interaction generated by the command's execution.
  */
  async function execute( interaction ) {
    if(Setup == false) return;
    
    const { setupDiscussion, setupProposition, setupPresentation, isSetupDone } = require("../../utils/enmapUtils")    
    const setup = [setupDiscussion, setupProposition, setupPresentation]

    /*for(tab in setup){
        tab.fetchEverything()
        tab.forEach( async (value, key) => {
            if(value === interaction.guild.id){
                tab.delete(key)
            }
        })
    }*/

    //BUG AVEC LA LOOP FOR (LOL)
   
    setupDiscussion.fetchEverything()
    setupDiscussion.forEach( async (value, key) => {
        if(value === interaction.guild.id){
            setupDiscussion.delete(key)
        }
    })
    
    setupProposition.fetchEverything()
    setupProposition.forEach( async (value, key) => {
        if(value === interaction.guild.id){
            setupProposition.delete(key)
        }
    })

    setupPresentation.fetchEverything()
    setupPresentation.forEach( async (value, key) => {
        if(value === interaction.guild.id){
            setupPresentation.delete(key)
        }
    })

    isSetupDone.set(interaction.guild.id, false)

    await interaction.reply(
        { content: `Bot réinitialisé, si vous souhaitez le réutiliser, merci de démarrer /setup.`, ephemeral: true }
    );
     
 }
 
 
 /* ----------------------------------------------- */
 /* MODULE EXPORTS                                  */
 /* ----------------------------------------------- */
 module.exports = {
    data: slashCommand,
    permissions: permissions,
    execute
 }