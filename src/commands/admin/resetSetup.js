/**
 * @author Lothaire Guée
 * @description
 *      Contains the command 'setup'.
 *      Allow admin to setup the JSON configuration file.
 */

/*      IMPORTS      */
const { SlashCommandBuilder } = require( "@discordjs/builders" );
const { CommandInteraction } = require( "discord.js" );

const { setup, isSetupDone, getSetupData } = require("../../utils/enmapUtils")    

 /*      AUTHORISATION      */
const { Setup } = require('../../files/modules.js');
const { loadPermissions } = require('../../events/ready.js');
 
 /* ----------------------------------------------- */
 /* COMMAND BUILD                                   */
 /* ----------------------------------------------- */
 const slashCommand = new SlashCommandBuilder()
    .setName( "reset_setup" )
    .setDescription( "[setup] Supprimer les données de configuration du bot pour ce serveur." )
    .setDefaultPermission( false )
  
 
/* ----------------------------------------------- */
/* PERMISSIONS                                     */
/* ----------------------------------------------- */

async function permissions(guild){
    const ADMIN_ID = await getSetupData(guild, "admin_id")
    const permissions = [
		{
			id: ADMIN_ID,
			type: 'ROLE',
			permission: true,
		},
	];
	return permissions;
}

 /* ----------------------------------------------- */
 /* FUNCTIONS                                       */
 /* ----------------------------------------------- */
 /**
  * Function called when the command 'ping'
  * @param {CommandInteraction} interaction The interaction generated by the command's execution.
  */
  async function execute( interaction ) {
    if(Setup == false) return;

    setup.fetchEverything()
    setup.forEach( async (key, value) => {
        if(key === interaction.guild.id){
            setup.delete(value)
        }
    })

    isSetupDone.set(interaction.guild.id, false)
    loadPermissions(interaction.client)

    await interaction.reply(
        { content: `Bot réinitialisé, si vous souhaitez le réutiliser, merci de démarrer /setup.`, ephemeral: true }
    );
     
 }
 
 
 /* ----------------------------------------------- */
 /* MODULE EXPORTS                                  */
 /* ----------------------------------------------- */
 module.exports = {
    data: slashCommand,
    permissions,
    execute
 }