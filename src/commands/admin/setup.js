/**
 * @author Lothaire Guée
 * @description
 *      Contains the command 'setup'.
 *      Allow admin to setup the JSON configuration file.
 */

/*      IMPORTS      */
const { SlashCommandBuilder } = require( "@discordjs/builders" );
const { CommandInteraction } = require( "discord.js" );
const fs = require('fs');
 
 /*      AUTHORISATION      */
const { Setup } = require('../../files/modules.js');
 
 /* ----------------------------------------------- */
 /* COMMAND BUILD                                   */
 /* ----------------------------------------------- */
 const slashCommand = new SlashCommandBuilder()
    .setName( "setup" )
    .setDescription( "Setup le bot sur ce serveur." )
    .setDefaultPermission( true )
    .addChannelOption(option =>
        option.setName('discussion')
            .setDescription("Entrez le channel de discussion.")
            .setRequired(true))  
    .addChannelOption(option =>
        option.setName('proposition')
        .setDescription("Entrez le channel de proposition.")
        .setRequired(true))
    .addChannelOption(option =>
        option.setName('presentation')
            .setDescription("Entrez le channel de presentation.")
            .setRequired(true));
  
 
/* ----------------------------------------------- */
/* PERMISSIONS                                     */
/* ----------------------------------------------- */

const permissions = [
    {
        id: 'MOD_ID',
        type: 'ROLE',
        permission: true,
    },
];

 /* ----------------------------------------------- */
 /* FUNCTIONS                                       */
 /* ----------------------------------------------- */
 /**
  * Function called when the command 'ping'
  * @param {CommandInteraction} interaction The interaction generated by the command's execution.
  */
  async function execute( interaction ) {
    if(Setup == false) return;
    
    discussionChannel = interaction.options.getChannel('discussion')
    propositionChannel = interaction.options.getChannel('proposition')
    presentationChannel = interaction.options.getChannel('presentation')

    console.log(discussionChannel.id)
    console.log(propositionChannel.id)
    console.log(presentationChannel.id)

    //JSON.stringify()

    await interaction.reply(
        { content: `Discussion : ${discussionChannel.id}, Proposition : ${propositionChannel.id}, Présentation : ${presentationChannel.id}`, ephemeral: true }
    );
     
 }
 
 
 /* ----------------------------------------------- */
 /* MODULE EXPORTS                                  */
 /* ----------------------------------------------- */
 module.exports = {
    data: slashCommand,
    id: slashCommand.id,
    permissions: permissions,
    execute
 }