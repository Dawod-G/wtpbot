/**
 * @author Lothaire Gu√©e
 * @description
 *      Contient la commande "advice"
 *      R√©ponds un des nombreux conseils pour mieux utiliser le serveur.
 */

const { SlashCommandBuilder } = require("@discordjs/builders");

/* ----------------------------------------------- */
/* COMMAND BUILD                                   */
/* ----------------------------------------------- */
const slashCommand = new SlashCommandBuilder()
    .setName("advice")
    .setDescription(
        "[fun] Obtenir un conseil pour mieux utiliser le serveur."
    );

/* ----------------------------------------------- */
/* FUNCTIONS                                       */
/* ----------------------------------------------- */
/**
 * Function called when the command 'ping'
 * @param {CommandInteraction} interaction The interaction generated by the command's execution.
 */
async function execute(interaction) {

    if(Advices == false) return;
    
    // G√©n√®re un nombre random entre 1 et 100
    const randomValue = Math.floor(Math.random() * 100 + 1);
    if (randomValue > 1) return;

    advices.fetchEverything(); // Importer advices depuis enmapUtils
    let isSent = false;
    advices.forEach(async (value, key) => {
        if (isSent) return;
            interaction.reply({content: value, ephemeral: true});
            isSent = true;
    });


    await interaction.reply({
        content: `üèì **PING**
		La latence du bot est de ${interaction.createdTimestamp - Date.now()}ms.
		Latence API Discord : ${Math.round(interaction.client.ws.ping)}ms`,
        ephemeral: false,
    });
}

/* ----------------------------------------------- */
/* MODULE EXPORTS                                  */
/* ----------------------------------------------- */
module.exports = {
    data: slashCommand,
    execute,
};
