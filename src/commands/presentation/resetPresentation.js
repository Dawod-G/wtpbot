/**
 * @author Lothaire Guée
 * @description
 *      Contains the command 'certify'.
 *      Allow mods to certify someone in the server.
 */

/*      IMPORTS      */
const { SlashCommandBuilder } = require("@discordjs/builders");
const {
    dbModifyPresentation,
    getSetupData,
} = require("../../utils/enmapUtils");

/*      AUTHORISATION      */
const { Presentation } = require("../../files/modules.js");

/* ----------------------------------------------- */
/* COMMAND BUILD                                   */
/* ----------------------------------------------- */
const slashCommand = new SlashCommandBuilder()
    .setName("p_reset")
    .setDescription(
        "[presentation] Reset les restrictions pour laisser un utilisateur mettre à nouveau une présentation."
    )
    .addUserOption((option) =>
        option
        .setName("user")
        .setDescription("Entrez l'utilisateur.")
        .setRequired(true)
    )
    .setDefaultPermission(false);

/* ----------------------------------------------- */
/* FUNCTIONS                                       */
/* ----------------------------------------------- */
/**
 * Function called when the command 'ping'
 * @param {CommandInteraction} interaction The interaction generated by the command's execution.
 */
async function execute(interaction) {
    if (Presentation == false) return;

    const PRESENTATION_ID = await getSetupData(
        interaction.guild.id,
        "presentation"
    );
    const memberFirst = interaction.options.getMember("user");

    dbModifyPresentation.delete(memberFirst.id);
    interaction.guild.channels.cache
        .find((x) => x.id === PRESENTATION_ID) //channel presentation
        .permissionOverwrites.edit(memberFirst, {
            SEND_MESSAGES: true,
        });

    await interaction.reply({
        content: `Reset des permissions de présentation de <@${memberFirst.id}> à été confirmé par <@${interaction.member.id}>.`,
        ephemeral: false,
    });
}

/* ----------------------------------------------- */
/* MODULE EXPORTS                                  */
/* ----------------------------------------------- */
module.exports = {
    data: slashCommand,
    execute,
};
