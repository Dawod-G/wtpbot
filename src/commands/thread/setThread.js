/**
 * @author Lothaire Guée
 * @description
 *      Contains the command 'set_thread'.
 *      Add a channel to the threads allowed database in order to create a comments section on each message.
 */


const { SlashCommandBuilder } = require( "@discordjs/builders" );
const { CommandInteraction } = require( "discord.js" );
const { setupThread, getSetupData } = require("../../utils/enmapUtils")

/*      AUTHORISATION      */
const { Thread } = require('../../files/modules.js');

/* ----------------------------------------------- */
/* COMMAND BUILD                                   */
/* ----------------------------------------------- */
const slashCommand = new SlashCommandBuilder()
	.setName( "set_thread" )
	.setDescription( "[thread] Ajouter le channel courant dans la base de données des channels autorisant les threads." )
    .setDefaultPermission( false )

/* ----------------------------------------------- */
/* PERMISSIONS                                     */
/* ----------------------------------------------- */

async function permissions(guild){
    const ADMIN_ID = await getSetupData(guild, "admin_id")
    const permissions = [
		{
			id: ADMIN_ID,
			type: 'ROLE',
			permission: true,
		},
	];
	return permissions;
}

/* ----------------------------------------------- */
/* FUNCTIONS                                       */
/* ----------------------------------------------- */
/**
 * Function called when the command 'ping'
 * @param {CommandInteraction} interaction The interaction generated by the command's execution.
 */
 async function execute( interaction ) {
    if(Thread == false) return;
	
    const THREAD_ID = await getSetupData(interaction.channel.id, "thread")

	if(THREAD_ID != interaction.channel.id){
		setupThread.set(interaction.channel.id, interaction.guild.id)
		await interaction.reply(
			{ content: `Channel <#${interaction.channel.id}> ajouté à la liste des channels threads !`, ephemeral: true }
		);
	}
	else {
		setupThread.delete(interaction.channel.id)
		await interaction.reply(
			{ content: `Channel <#${interaction.channel.id}> supprimé de la liste des channels threads !`, ephemeral: true }
		);

	}


}


/* ----------------------------------------------- */
/* MODULE EXPORTS                                  */
/* ----------------------------------------------- */
module.exports = {
	data: slashCommand,
	permissions,
	execute
}